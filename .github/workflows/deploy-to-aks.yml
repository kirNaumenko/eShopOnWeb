name: Deploy to AKS
on:
  workflow_dispatch:
jobs:
  deploy:
    name: 'Deploy app to AKS'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Set up Kubectl
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: knaumenko-aks
          resource-group: kubernetes-cluster-rg
          
      - name: Deploy secret for acr
        run: kubectl create secret docker-registry acr-credentials --docker-server=knaumenkocontainerregistry.azurecr.io --docker-username=${{ secrets.ACR_USERNAME }} --docker-password=${{ secrets.ACR_PASSWORD }} --docker-email=kir.naumenko@gmail.com --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply configMap
        run: kubectl apply -f ./kubernetes/database-configmap.yml    

      - name: Apply database deployment
        run: kubectl apply -f ./kubernetes/database-deployment.yml
    
      - name: Apply database cluster ip
        run: kubectl apply -f ./kubernetes/database-service.yml

      - name: Apply backend deployment
        run: kubectl apply -f ./kubernetes/backend-deployment.yml
  
      - name: Apply backend cluster ip
        run: kubectl apply -f ./kubernetes/backend-service.yml

      - name: Apply frontend deployment
        run: kubectl apply -f ./kubernetes/frontend-deployment.yml

      - name: Apply frontend load balancer
        run: kubectl apply -f ./kubernetes/frontend-service.yml
